{
  "openapi": "3.0.3",
  "info": {
    "title": "PERSCOM Personnel Management System API",
    "description": "The PERSCOM API describes how to interact and manipulate your PERSCOM data available at https://perscom.io. The API provides a powerful interface to allow for third-party collaboration and integration with your PERSCOM Dashboard.",
    "termsOfService": "https://perscom.io/privacy-policy",
    "contact": {
      "name": "Deschutes Design Group LLC",
      "url": "https://www.deschutesdesigngroup.com",
      "email": "support@deschutesdesigngroup.com"
    },
    "version": "v2"
  },
  "servers": [
    {
      "url": "https://api.perscom.io",
      "description": "Production Environment"
    },
    {
      "url": "https://api.staging.perscom.io",
      "description": "Staging Environment"
    }
  ],
  "security": [
    {
      "ApiKey": []
    }
  ],
  "paths": {
    "/{version}/me": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get the current user",
        "tags": [
          "Me"
        ]
      }
    },
    "/{version}/announcements": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Announcement"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AnnouncementResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create announcement",
        "tags": [
          "Announcements"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AnnouncementResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of announcements",
        "tags": [
          "Announcements"
        ]
      }
    },
    "/{version}/announcements/search": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "enum": [
                            "enabled",
                            "disabled"
                          ]
                        },
                        "parameters": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "and",
                            "or"
                          ]
                        },
                        "field": {
                          "type": "string",
                          "enum": [
                            "id",
                            "title",
                            "content",
                            "color",
                            "global",
                            "enabled",
                            "expires_at",
                            "created_at",
                            "updated_at",
                            "deleted_at"
                          ]
                        },
                        "operator": {
                          "type": "string",
                          "enum": [
                            "<",
                            "<=",
                            ">",
                            ">=",
                            "=",
                            "!=",
                            "like",
                            "not like",
                            "ilike",
                            "not ilike",
                            "in",
                            "not in",
                            "all in",
                            "any in"
                          ]
                        },
                        "value": {
                          "type": "string"
                        },
                        "nested": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "and",
                                  "or"
                                ]
                              },
                              "field": {
                                "type": "string",
                                "enum": [
                                  "id",
                                  "title",
                                  "content",
                                  "color",
                                  "global",
                                  "enabled",
                                  "expires_at",
                                  "created_at",
                                  "updated_at",
                                  "deleted_at"
                                ]
                              },
                              "operator": {
                                "type": "string",
                                "enum": [
                                  "<",
                                  "<=",
                                  ">",
                                  ">=",
                                  "=",
                                  "!=",
                                  "like",
                                  "not like",
                                  "ilike",
                                  "not ilike",
                                  "in",
                                  "not in",
                                  "all in",
                                  "any in"
                                ]
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "search": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "A search for the given value will be performed on the following fields: id, title, content, color, global, enabled, expires_at, created_at, updated_at, deleted_at"
                      },
                      "case_sensitive": {
                        "type": "boolean",
                        "description": "(default: true) Set it to false to perform search in case-insensitive way"
                      }
                    }
                  },
                  "sort": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "enum": [
                            "id",
                            "title",
                            "content",
                            "color",
                            "global",
                            "enabled",
                            "expires_at",
                            "created_at",
                            "updated_at",
                            "deleted_at"
                          ]
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "asc",
                            "desc"
                          ]
                        }
                      },
                      "required": [
                        "field"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AnnouncementResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Search for announcements",
        "tags": [
          "Announcements"
        ]
      }
    },
    "/{version}/announcements/{announcement}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "announcement",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AnnouncementResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get announcement",
        "tags": [
          "Announcements"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "announcement",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Announcement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AnnouncementResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update announcement",
        "tags": [
          "Announcements"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "announcement",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AnnouncementResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete announcement",
        "tags": [
          "Announcements"
        ]
      }
    },
    "/{version}/announcements/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Announcement"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AnnouncementResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of announcements",
        "tags": [
          "Announcements"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Announcement"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AnnouncementResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of announcements",
        "tags": [
          "Announcements"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AnnouncementResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of announcements",
        "tags": [
          "Announcements"
        ]
      }
    },
    "/{version}/assignment-records": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AssignmentRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create assignment record",
        "tags": [
          "Assignment Records"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssignmentRecordResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of assignment records",
        "tags": [
          "Assignment Records"
        ]
      }
    },
    "/{version}/assignment-records/{assignment_record}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "assignment_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AssignmentRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get assignment record",
        "tags": [
          "Assignment Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "assignment_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AssignmentRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update assignment record",
        "tags": [
          "Assignment Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "assignment_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AssignmentRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete assignment record",
        "tags": [
          "Assignment Records"
        ]
      }
    },
    "/{version}/assignment-records/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AssignmentRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssignmentRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of assignment records",
        "tags": [
          "Assignment Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/AssignmentRecord"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssignmentRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of assignment records",
        "tags": [
          "Assignment Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssignmentRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of assignment records",
        "tags": [
          "Assignment Records"
        ]
      }
    },
    "/{version}/attachments": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AttachmentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create attachment",
        "tags": [
          "Attachments"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AttachmentResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of attachments",
        "tags": [
          "Attachments"
        ]
      }
    },
    "/{version}/attachments/{attachment}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "attachment",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AttachmentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get attachment",
        "tags": [
          "Attachments"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "attachment",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AttachmentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update attachment",
        "tags": [
          "Attachments"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "attachment",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AttachmentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete attachment",
        "tags": [
          "Attachments"
        ]
      }
    },
    "/{version}/attachments/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Attachment"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AttachmentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of attachments",
        "tags": [
          "Attachments"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Attachment"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AttachmentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of attachments",
        "tags": [
          "Attachments"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AttachmentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of attachments",
        "tags": [
          "Attachments"
        ]
      }
    },
    "/{version}/awards": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Award"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create award",
        "tags": [
          "Awards"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of awards",
        "tags": [
          "Awards"
        ]
      }
    },
    "/{version}/awards/{award}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get award",
        "tags": [
          "Awards"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Award"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update award",
        "tags": [
          "Awards"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete award",
        "tags": [
          "Awards"
        ]
      }
    },
    "/{version}/awards/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Award"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of awards",
        "tags": [
          "Awards"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Award"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of awards",
        "tags": [
          "Awards"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of awards",
        "tags": [
          "Awards"
        ]
      }
    },
    "/{version}/awards/{award}/image": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create image",
        "tags": [
          "Awards Image"
        ]
      }
    },
    "/{version}/awards/{award}/image/{image}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get image",
        "tags": [
          "Awards Image"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update image",
        "tags": [
          "Awards Image"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete image",
        "tags": [
          "Awards Image"
        ]
      }
    },
    "/{version}/award-records": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwardRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create award record",
        "tags": [
          "Award Records"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardRecordResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of award records",
        "tags": [
          "Award Records"
        ]
      }
    },
    "/{version}/award-records/{award_record}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get award record",
        "tags": [
          "Award Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwardRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update award record",
        "tags": [
          "Award Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete award record",
        "tags": [
          "Award Records"
        ]
      }
    },
    "/{version}/award-records/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AwardRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of award records",
        "tags": [
          "Award Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/AwardRecord"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of award records",
        "tags": [
          "Award Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of award records",
        "tags": [
          "Award Records"
        ]
      }
    },
    "/{version}/cache": {
      "description": "Clears the entire API cache for your account. Note, this can take a few minutes to propagate across the entire CDN network.",
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "okay"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Clear cache"
      }
    },
    "/{version}/calendars": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "events",
                "events.author",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Calendar"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CalendarResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create calendar",
        "tags": [
          "Calendars"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "events",
                "events.author",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CalendarResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of calendars",
        "tags": [
          "Calendars"
        ]
      }
    },
    "/{version}/calendars/{calendar}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "calendar",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "events",
                "events.author",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CalendarResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get calendar",
        "tags": [
          "Calendars"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "calendar",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "events",
                "events.author",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Calendar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CalendarResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update calendar",
        "tags": [
          "Calendars"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "calendar",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "events",
                "events.author",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CalendarResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete calendar",
        "tags": [
          "Calendars"
        ]
      }
    },
    "/{version}/calendars/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "events",
                "events.author",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Calendar"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CalendarResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of calendars",
        "tags": [
          "Calendars"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "events",
                "events.author",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Calendar"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CalendarResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of calendars",
        "tags": [
          "Calendars"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "events",
                "events.author",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CalendarResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of calendars",
        "tags": [
          "Calendars"
        ]
      }
    },
    "/{version}/categories": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "awards",
                "documents",
                "forms",
                "qualifications",
                "ranks"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CategoryResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create category",
        "tags": [
          "Categories"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "awards",
                "documents",
                "forms",
                "qualifications",
                "ranks"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CategoryResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of categories",
        "tags": [
          "Categories"
        ]
      }
    },
    "/{version}/categories/{category}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "awards",
                "documents",
                "forms",
                "qualifications",
                "ranks"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CategoryResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get category",
        "tags": [
          "Categories"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "awards",
                "documents",
                "forms",
                "qualifications",
                "ranks"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CategoryResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update category",
        "tags": [
          "Categories"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "awards",
                "documents",
                "forms",
                "qualifications",
                "ranks"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CategoryResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete category",
        "tags": [
          "Categories"
        ]
      }
    },
    "/{version}/categories/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "awards",
                "documents",
                "forms",
                "qualifications",
                "ranks"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Category"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CategoryResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of categories",
        "tags": [
          "Categories"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "awards",
                "documents",
                "forms",
                "qualifications",
                "ranks"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Category"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CategoryResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of categories",
        "tags": [
          "Categories"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "awards",
                "documents",
                "forms",
                "qualifications",
                "ranks"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CategoryResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of categories",
        "tags": [
          "Categories"
        ]
      }
    },
    "/{version}/categories/{category}/awards": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Award"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create award",
        "tags": [
          "Categories Awards"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of awards",
        "tags": [
          "Categories Awards"
        ]
      }
    },
    "/{version}/categories/{category}/awards/{award}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get award",
        "tags": [
          "Categories Awards"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Award"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update award",
        "tags": [
          "Categories Awards"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete award",
        "tags": [
          "Categories Awards"
        ]
      }
    },
    "/{version}/categories/{category}/awards/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Award"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of awards",
        "tags": [
          "Categories Awards"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Award"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of awards",
        "tags": [
          "Categories Awards"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of awards",
        "tags": [
          "Categories Awards"
        ]
      }
    },
    "/{version}/categories/{category}/awards/attach": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Attach awards",
        "tags": [
          "Categories Awards"
        ]
      }
    },
    "/{version}/categories/{category}/awards/detach": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Detach awards",
        "tags": [
          "Categories Awards"
        ]
      }
    },
    "/{version}/categories/{category}/awards/sync": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Sync awards",
        "tags": [
          "Categories Awards"
        ]
      }
    },
    "/{version}/categories/{category}/awards/toggle": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Toggle awards",
        "tags": [
          "Categories Awards"
        ]
      }
    },
    "/{version}/categories/{category}/awards/{award}/pivot": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pivot": {
                    "type": "object",
                    "description": "Pivot fields"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update pivot",
        "tags": [
          "Categories Awards"
        ]
      }
    },
    "/{version}/categories/{category}/documents": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DocumentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create document",
        "tags": [
          "Categories Documents"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of documents",
        "tags": [
          "Categories Documents"
        ]
      }
    },
    "/{version}/categories/{category}/documents/{document}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "document",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DocumentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get document",
        "tags": [
          "Categories Documents"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "document",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DocumentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update document",
        "tags": [
          "Categories Documents"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "document",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DocumentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete document",
        "tags": [
          "Categories Documents"
        ]
      }
    },
    "/{version}/categories/{category}/documents/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Document"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of documents",
        "tags": [
          "Categories Documents"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Document"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of documents",
        "tags": [
          "Categories Documents"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of documents",
        "tags": [
          "Categories Documents"
        ]
      }
    },
    "/{version}/categories/{category}/documents/attach": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Attach documents",
        "tags": [
          "Categories Documents"
        ]
      }
    },
    "/{version}/categories/{category}/documents/detach": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Detach documents",
        "tags": [
          "Categories Documents"
        ]
      }
    },
    "/{version}/categories/{category}/documents/sync": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Sync documents",
        "tags": [
          "Categories Documents"
        ]
      }
    },
    "/{version}/categories/{category}/documents/toggle": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Toggle documents",
        "tags": [
          "Categories Documents"
        ]
      }
    },
    "/{version}/categories/{category}/documents/{document}/pivot": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "document",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pivot": {
                    "type": "object",
                    "description": "Pivot fields"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update pivot",
        "tags": [
          "Categories Documents"
        ]
      }
    },
    "/{version}/categories/{category}/forms": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Form"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FormResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create form",
        "tags": [
          "Categories Forms"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FormResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of forms",
        "tags": [
          "Categories Forms"
        ]
      }
    },
    "/{version}/categories/{category}/forms/{form}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FormResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get form",
        "tags": [
          "Categories Forms"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Form"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FormResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update form",
        "tags": [
          "Categories Forms"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FormResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete form",
        "tags": [
          "Categories Forms"
        ]
      }
    },
    "/{version}/categories/{category}/forms/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Form"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FormResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of forms",
        "tags": [
          "Categories Forms"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Form"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FormResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of forms",
        "tags": [
          "Categories Forms"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FormResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of forms",
        "tags": [
          "Categories Forms"
        ]
      }
    },
    "/{version}/categories/{category}/forms/attach": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Attach forms",
        "tags": [
          "Categories Forms"
        ]
      }
    },
    "/{version}/categories/{category}/forms/detach": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Detach forms",
        "tags": [
          "Categories Forms"
        ]
      }
    },
    "/{version}/categories/{category}/forms/sync": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Sync forms",
        "tags": [
          "Categories Forms"
        ]
      }
    },
    "/{version}/categories/{category}/forms/toggle": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Toggle forms",
        "tags": [
          "Categories Forms"
        ]
      }
    },
    "/{version}/categories/{category}/forms/{form}/pivot": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pivot": {
                    "type": "object",
                    "description": "Pivot fields"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update pivot",
        "tags": [
          "Categories Forms"
        ]
      }
    },
    "/{version}/categories/{category}/qualifications": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Qualification"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create qualification",
        "tags": [
          "Categories Qualifications"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of qualifications",
        "tags": [
          "Categories Qualifications"
        ]
      }
    },
    "/{version}/categories/{category}/qualifications/{qualification}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get qualification",
        "tags": [
          "Categories Qualifications"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Qualification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update qualification",
        "tags": [
          "Categories Qualifications"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete qualification",
        "tags": [
          "Categories Qualifications"
        ]
      }
    },
    "/{version}/categories/{category}/qualifications/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Qualification"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of qualifications",
        "tags": [
          "Categories Qualifications"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Qualification"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of qualifications",
        "tags": [
          "Categories Qualifications"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of qualifications",
        "tags": [
          "Categories Qualifications"
        ]
      }
    },
    "/{version}/categories/{category}/qualifications/attach": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Attach qualifications",
        "tags": [
          "Categories Qualifications"
        ]
      }
    },
    "/{version}/categories/{category}/qualifications/detach": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Detach qualifications",
        "tags": [
          "Categories Qualifications"
        ]
      }
    },
    "/{version}/categories/{category}/qualifications/sync": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Sync qualifications",
        "tags": [
          "Categories Qualifications"
        ]
      }
    },
    "/{version}/categories/{category}/qualifications/toggle": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Toggle qualifications",
        "tags": [
          "Categories Qualifications"
        ]
      }
    },
    "/{version}/categories/{category}/qualifications/{qualification}/pivot": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pivot": {
                    "type": "object",
                    "description": "Pivot fields"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update pivot",
        "tags": [
          "Categories Qualifications"
        ]
      }
    },
    "/{version}/categories/{category}/ranks": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rank"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create rank",
        "tags": [
          "Categories Ranks"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of ranks",
        "tags": [
          "Categories Ranks"
        ]
      }
    },
    "/{version}/categories/{category}/ranks/{rank}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get rank",
        "tags": [
          "Categories Ranks"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rank"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update rank",
        "tags": [
          "Categories Ranks"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete rank",
        "tags": [
          "Categories Ranks"
        ]
      }
    },
    "/{version}/categories/{category}/ranks/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Rank"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of ranks",
        "tags": [
          "Categories Ranks"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Rank"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of ranks",
        "tags": [
          "Categories Ranks"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of ranks",
        "tags": [
          "Categories Ranks"
        ]
      }
    },
    "/{version}/categories/{category}/ranks/attach": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Attach ranks",
        "tags": [
          "Categories Ranks"
        ]
      }
    },
    "/{version}/categories/{category}/ranks/detach": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Detach ranks",
        "tags": [
          "Categories Ranks"
        ]
      }
    },
    "/{version}/categories/{category}/ranks/sync": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Sync ranks",
        "tags": [
          "Categories Ranks"
        ]
      }
    },
    "/{version}/categories/{category}/ranks/toggle": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Toggle ranks",
        "tags": [
          "Categories Ranks"
        ]
      }
    },
    "/{version}/categories/{category}/ranks/{rank}/pivot": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pivot": {
                    "type": "object",
                    "description": "Pivot fields"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update pivot",
        "tags": [
          "Categories Ranks"
        ]
      }
    },
    "/{version}/combat-records": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CombatRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CombatRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create combat record",
        "tags": [
          "Combat Records"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CombatRecordResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of combat records",
        "tags": [
          "Combat Records"
        ]
      }
    },
    "/{version}/combat-records/{combat_record}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "combat_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CombatRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get combat record",
        "tags": [
          "Combat Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "combat_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CombatRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CombatRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update combat record",
        "tags": [
          "Combat Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "combat_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CombatRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete combat record",
        "tags": [
          "Combat Records"
        ]
      }
    },
    "/{version}/combat-records/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CombatRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CombatRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of combat records",
        "tags": [
          "Combat Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/CombatRecord"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CombatRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of combat records",
        "tags": [
          "Combat Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CombatRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of combat records",
        "tags": [
          "Combat Records"
        ]
      }
    },
    "/{version}/comments": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author",
                "commentable"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CommentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create comment",
        "tags": [
          "Comments"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author",
                "commentable"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CommentResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of comments",
        "tags": [
          "Comments"
        ]
      }
    },
    "/{version}/comments/{comment}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "comment",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author",
                "commentable"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CommentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get comment",
        "tags": [
          "Comments"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "comment",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author",
                "commentable"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CommentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update comment",
        "tags": [
          "Comments"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "comment",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author",
                "commentable"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CommentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete comment",
        "tags": [
          "Comments"
        ]
      }
    },
    "/{version}/comments/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author",
                "commentable"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Comment"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CommentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of comments",
        "tags": [
          "Comments"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author",
                "commentable"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CommentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of comments",
        "tags": [
          "Comments"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author",
                "commentable"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CommentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of comments",
        "tags": [
          "Comments"
        ]
      }
    },
    "/{version}/documents": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DocumentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create document",
        "tags": [
          "Documents"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of documents",
        "tags": [
          "Documents"
        ]
      }
    },
    "/{version}/documents/{document}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "document",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DocumentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get document",
        "tags": [
          "Documents"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "document",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DocumentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update document",
        "tags": [
          "Documents"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "document",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DocumentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete document",
        "tags": [
          "Documents"
        ]
      }
    },
    "/{version}/documents/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Document"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of documents",
        "tags": [
          "Documents"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Document"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of documents",
        "tags": [
          "Documents"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "author"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of documents",
        "tags": [
          "Documents"
        ]
      }
    },
    "/{version}/events": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EventResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create event",
        "tags": [
          "Events"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EventResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of events",
        "tags": [
          "Events"
        ]
      }
    },
    "/{version}/events/{event}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "event",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "calendar",
                "calendar.*",
                "comments",
                "comments.*",
                "image",
                "schedule",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EventResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get event",
        "tags": [
          "Events"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "event",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "calendar",
                "calendar.*",
                "comments",
                "comments.*",
                "image",
                "schedule",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EventResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update event",
        "tags": [
          "Events"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "event",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "calendar",
                "calendar.*",
                "comments",
                "comments.*",
                "image",
                "schedule",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EventResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete event",
        "tags": [
          "Events"
        ]
      }
    },
    "/{version}/events/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "calendar",
                "calendar.*",
                "comments",
                "comments.*",
                "image",
                "schedule",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Event"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EventResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of events",
        "tags": [
          "Events"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "calendar",
                "calendar.*",
                "comments",
                "comments.*",
                "image",
                "schedule",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Event"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EventResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of events",
        "tags": [
          "Events"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "calendar",
                "calendar.*",
                "comments",
                "comments.*",
                "image",
                "schedule",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EventResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of events",
        "tags": [
          "Events"
        ]
      }
    },
    "/{version}/events/{event}/image": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "event",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create image",
        "tags": [
          "Events Image"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "event",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImageResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of images",
        "tags": [
          "Events Image"
        ]
      }
    },
    "/{version}/events/{event}/image/search": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "event",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "and",
                            "or"
                          ]
                        },
                        "field": {
                          "type": "string",
                          "enum": [
                            "id",
                            "name",
                            "description",
                            "filename",
                            "path",
                            "created_at",
                            "updated_at"
                          ]
                        },
                        "operator": {
                          "type": "string",
                          "enum": [
                            "<",
                            "<=",
                            ">",
                            ">=",
                            "=",
                            "!=",
                            "like",
                            "not like",
                            "ilike",
                            "not ilike",
                            "in",
                            "not in",
                            "all in",
                            "any in"
                          ]
                        },
                        "value": {
                          "type": "string"
                        },
                        "nested": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "and",
                                  "or"
                                ]
                              },
                              "field": {
                                "type": "string",
                                "enum": [
                                  "id",
                                  "name",
                                  "description",
                                  "filename",
                                  "path",
                                  "created_at",
                                  "updated_at"
                                ]
                              },
                              "operator": {
                                "type": "string",
                                "enum": [
                                  "<",
                                  "<=",
                                  ">",
                                  ">=",
                                  "=",
                                  "!=",
                                  "like",
                                  "not like",
                                  "ilike",
                                  "not ilike",
                                  "in",
                                  "not in",
                                  "all in",
                                  "any in"
                                ]
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "search": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "A search for the given value will be performed on the following fields: id, name, description, filename, path, created_at, updated_at"
                      },
                      "case_sensitive": {
                        "type": "boolean",
                        "description": "(default: true) Set it to false to perform search in case-insensitive way"
                      }
                    }
                  },
                  "sort": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "enum": [
                            "id",
                            "name",
                            "description",
                            "filename",
                            "path",
                            "created_at",
                            "updated_at"
                          ]
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "asc",
                            "desc"
                          ]
                        }
                      },
                      "required": [
                        "field"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImageResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Search for images",
        "tags": [
          "Events Image"
        ]
      }
    },
    "/{version}/events/{event}/image/{image}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "event",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get image",
        "tags": [
          "Events Image"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "event",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update image",
        "tags": [
          "Events Image"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "event",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete image",
        "tags": [
          "Events Image"
        ]
      }
    },
    "/{version}/events/{event}/image/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "event",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Image"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImageResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of images",
        "tags": [
          "Events Image"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "event",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Image"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImageResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of images",
        "tags": [
          "Events Image"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "event",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImageResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of images",
        "tags": [
          "Events Image"
        ]
      }
    },
    "/{version}/events/{event}/image/associate": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "event",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Associate image with event",
        "tags": [
          "Events Image"
        ]
      }
    },
    "/{version}/events/{event}/image/{image}/dissociate": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "event",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Dissociate image from event",
        "tags": [
          "Events Image"
        ]
      }
    },
    "/{version}/forms": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Form"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FormResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create form",
        "tags": [
          "Forms"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FormResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of forms",
        "tags": [
          "Forms"
        ]
      }
    },
    "/{version}/forms/{form}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FormResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get form",
        "tags": [
          "Forms"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Form"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FormResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update form",
        "tags": [
          "Forms"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FormResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete form",
        "tags": [
          "Forms"
        ]
      }
    },
    "/{version}/forms/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Form"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FormResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of forms",
        "tags": [
          "Forms"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Form"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FormResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of forms",
        "tags": [
          "Forms"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fields",
                "submissions",
                "submissions.*",
                "tags"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FormResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of forms",
        "tags": [
          "Forms"
        ]
      }
    },
    "/{version}/forms/{form}/submissions": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "form",
                "user",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubmissionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create submission",
        "tags": [
          "Forms Submissions"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "form",
                "user",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubmissionResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of submissions",
        "tags": [
          "Forms Submissions"
        ]
      }
    },
    "/{version}/forms/{form}/submissions/{submission}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "form",
                "user",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubmissionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get submission",
        "tags": [
          "Forms Submissions"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "form",
                "user",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubmissionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update submission",
        "tags": [
          "Forms Submissions"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "form",
                "user",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubmissionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete submission",
        "tags": [
          "Forms Submissions"
        ]
      }
    },
    "/{version}/forms/{form}/submissions/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "form",
                "user",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Submission"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubmissionResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of submissions",
        "tags": [
          "Forms Submissions"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "form",
                "user",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Submission"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubmissionResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of submissions",
        "tags": [
          "Forms Submissions"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "form",
                "user",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubmissionResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of submissions",
        "tags": [
          "Forms Submissions"
        ]
      }
    },
    "/{version}/forms/{form}/submissions/associate": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "form",
                "user",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubmissionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Associate submission with form",
        "tags": [
          "Forms Submissions"
        ]
      }
    },
    "/{version}/forms/{form}/submissions/{submission}/dissociate": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "form",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "form",
                "user",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubmissionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Dissociate submission from form",
        "tags": [
          "Forms Submissions"
        ]
      }
    },
    "/{version}/groups": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image",
                "units",
                "units.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GroupResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create group",
        "tags": [
          "Groups"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image",
                "units",
                "units.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GroupResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of groups",
        "tags": [
          "Groups"
        ]
      }
    },
    "/{version}/groups/{group}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "group",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image",
                "units",
                "units.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GroupResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get group",
        "tags": [
          "Groups"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "group",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image",
                "units",
                "units.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GroupResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update group",
        "tags": [
          "Groups"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "group",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image",
                "units",
                "units.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GroupResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete group",
        "tags": [
          "Groups"
        ]
      }
    },
    "/{version}/groups/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image",
                "units",
                "units.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Group"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GroupResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of groups",
        "tags": [
          "Groups"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image",
                "units",
                "units.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Group"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GroupResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of groups",
        "tags": [
          "Groups"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image",
                "units",
                "units.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GroupResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of groups",
        "tags": [
          "Groups"
        ]
      }
    },
    "/{version}/groups/{group}/image": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "group",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create image",
        "tags": [
          "Groups Image"
        ]
      }
    },
    "/{version}/groups/{group}/image/{image}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "group",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get image",
        "tags": [
          "Groups Image"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "group",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update image",
        "tags": [
          "Groups Image"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "group",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete image",
        "tags": [
          "Groups Image"
        ]
      }
    },
    "/{version}/images": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create image",
        "tags": [
          "Images"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImageResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of images",
        "tags": [
          "Images"
        ]
      }
    },
    "/{version}/images/{image}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get image",
        "tags": [
          "Images"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update image",
        "tags": [
          "Images"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete image",
        "tags": [
          "Images"
        ]
      }
    },
    "/{version}/images/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Image"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImageResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of images",
        "tags": [
          "Images"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Image"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImageResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of images",
        "tags": [
          "Images"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "model"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImageResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of images",
        "tags": [
          "Images"
        ]
      }
    },
    "/{version}/messages": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "schedule"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MessageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create message",
        "tags": [
          "Messages"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "schedule"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MessageResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of messages",
        "tags": [
          "Messages"
        ]
      }
    },
    "/{version}/messages/{message}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "message",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "schedule"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MessageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get message",
        "tags": [
          "Messages"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "message",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "schedule"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MessageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update message",
        "tags": [
          "Messages"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "message",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "schedule"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MessageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete message",
        "tags": [
          "Messages"
        ]
      }
    },
    "/{version}/messages/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "schedule"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Message"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MessageResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of messages",
        "tags": [
          "Messages"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "schedule"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MessageResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of messages",
        "tags": [
          "Messages"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "schedule"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MessageResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of messages",
        "tags": [
          "Messages"
        ]
      }
    },
    "/{version}/newsfeed": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NewsfeedResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of activity log",
        "tags": [
          "Newsfeed"
        ]
      }
    },
    "/{version}/newsfeed/{newsfeed}/likes": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "newsfeed",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "award_records",
                "award_records.*",
                "combat_records",
                "combat_records.*",
                "position",
                "qualification_records",
                "rank",
                "rank_records",
                "rank_records.*",
                "service_records",
                "service_records.*",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of users",
        "tags": [
          "Newsfeed Likes"
        ]
      }
    },
    "/{version}/newsfeed/{newsfeed}/likes/attach": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "newsfeed",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "award_records",
                "award_records.*",
                "combat_records",
                "combat_records.*",
                "position",
                "qualification_records",
                "rank",
                "rank_records",
                "rank_records.*",
                "service_records",
                "service_records.*",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Attach users",
        "tags": [
          "Newsfeed Likes"
        ]
      }
    },
    "/{version}/newsfeed/{newsfeed}/likes/detach": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "newsfeed",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "award_records",
                "award_records.*",
                "combat_records",
                "combat_records.*",
                "position",
                "qualification_records",
                "rank",
                "rank_records",
                "rank_records.*",
                "service_records",
                "service_records.*",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Detach users",
        "tags": [
          "Newsfeed Likes"
        ]
      }
    },
    "/{version}/newsfeed/{newsfeed}/likes/sync": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "newsfeed",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "award_records",
                "award_records.*",
                "combat_records",
                "combat_records.*",
                "position",
                "qualification_records",
                "rank",
                "rank_records",
                "rank_records.*",
                "service_records",
                "service_records.*",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Sync users",
        "tags": [
          "Newsfeed Likes"
        ]
      }
    },
    "/{version}/positions": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PositionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create position",
        "tags": [
          "Positions"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PositionResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of positions",
        "tags": [
          "Positions"
        ]
      }
    },
    "/{version}/positions/{position}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "position",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PositionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get position",
        "tags": [
          "Positions"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "position",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PositionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update position",
        "tags": [
          "Positions"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "position",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PositionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete position",
        "tags": [
          "Positions"
        ]
      }
    },
    "/{version}/positions/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Position"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PositionResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of positions",
        "tags": [
          "Positions"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Position"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PositionResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of positions",
        "tags": [
          "Positions"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PositionResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of positions",
        "tags": [
          "Positions"
        ]
      }
    },
    "/{version}/qualifications": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Qualification"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create qualification",
        "tags": [
          "Qualifications"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of qualifications",
        "tags": [
          "Qualifications"
        ]
      }
    },
    "/{version}/qualifications/{qualification}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get qualification",
        "tags": [
          "Qualifications"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Qualification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update qualification",
        "tags": [
          "Qualifications"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete qualification",
        "tags": [
          "Qualifications"
        ]
      }
    },
    "/{version}/qualifications/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Qualification"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of qualifications",
        "tags": [
          "Qualifications"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Qualification"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of qualifications",
        "tags": [
          "Qualifications"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of qualifications",
        "tags": [
          "Qualifications"
        ]
      }
    },
    "/{version}/qualifications/{qualification}/image": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create image",
        "tags": [
          "Qualifications Image"
        ]
      }
    },
    "/{version}/qualifications/{qualification}/image/{image}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get image",
        "tags": [
          "Qualifications Image"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update image",
        "tags": [
          "Qualifications Image"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete image",
        "tags": [
          "Qualifications Image"
        ]
      }
    },
    "/{version}/qualification-records": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "document",
                "comments",
                "comments.*",
                "qualification",
                "qualification.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QualificationRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create qualification record",
        "tags": [
          "Qualification Records"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "document",
                "comments",
                "comments.*",
                "qualification",
                "qualification.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationRecordResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of qualification records",
        "tags": [
          "Qualification Records"
        ]
      }
    },
    "/{version}/qualification-records/{qualification_record}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "document",
                "comments",
                "comments.*",
                "qualification",
                "qualification.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get qualification record",
        "tags": [
          "Qualification Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "document",
                "comments",
                "comments.*",
                "qualification",
                "qualification.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QualificationRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update qualification record",
        "tags": [
          "Qualification Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "document",
                "comments",
                "comments.*",
                "qualification",
                "qualification.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete qualification record",
        "tags": [
          "Qualification Records"
        ]
      }
    },
    "/{version}/qualification-records/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "document",
                "comments",
                "comments.*",
                "qualification",
                "qualification.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/QualificationRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of qualification records",
        "tags": [
          "Qualification Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "document",
                "comments",
                "comments.*",
                "qualification",
                "qualification.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/QualificationRecord"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of qualification records",
        "tags": [
          "Qualification Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "document",
                "comments",
                "comments.*",
                "qualification",
                "qualification.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of qualification records",
        "tags": [
          "Qualification Records"
        ]
      }
    },
    "/{version}/ranks": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rank"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create rank",
        "tags": [
          "Ranks"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of ranks",
        "tags": [
          "Ranks"
        ]
      }
    },
    "/{version}/ranks/{rank}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get rank",
        "tags": [
          "Ranks"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rank"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update rank",
        "tags": [
          "Ranks"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete rank",
        "tags": [
          "Ranks"
        ]
      }
    },
    "/{version}/ranks/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Rank"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of ranks",
        "tags": [
          "Ranks"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Rank"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of ranks",
        "tags": [
          "Ranks"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of ranks",
        "tags": [
          "Ranks"
        ]
      }
    },
    "/{version}/ranks/{rank}/image": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create image",
        "tags": [
          "Ranks Image"
        ]
      }
    },
    "/{version}/ranks/{rank}/image/{image}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get image",
        "tags": [
          "Ranks Image"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update image",
        "tags": [
          "Ranks Image"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete image",
        "tags": [
          "Ranks Image"
        ]
      }
    },
    "/{version}/rank-records": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RankRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create rank record",
        "tags": [
          "Rank Records"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankRecordResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of rank records",
        "tags": [
          "Rank Records"
        ]
      }
    },
    "/{version}/rank-records/{rank_record}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get rank record",
        "tags": [
          "Rank Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RankRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update rank record",
        "tags": [
          "Rank Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete rank record",
        "tags": [
          "Rank Records"
        ]
      }
    },
    "/{version}/rank-records/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RankRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of rank records",
        "tags": [
          "Rank Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/RankRecord"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of rank records",
        "tags": [
          "Rank Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of rank records",
        "tags": [
          "Rank Records"
        ]
      }
    },
    "/{version}/roster": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image",
                "units",
                "units.image",
                "units.users",
                "units.users.position",
                "units.users.rank",
                "units.users.rank.image",
                "units.users.specialty",
                "units.users.status",
                "units.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RosterResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "List by groups",
        "description": "The roster endpoint returns a list of groups with their associated units and users already included. The personnel are then sorted by rank, specialty, position and name to assist with creating a roster-like UI.",
        "tags": [
          "Roster"
        ]
      }
    },
    "/{version}/roster/{roster}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "roster",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image",
                "units",
                "units.image",
                "units.users",
                "units.users.position",
                "units.users.rank",
                "units.users.rank.image",
                "units.users.specialty",
                "units.users.status",
                "units.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RosterResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "List by one group",
        "tags": [
          "Roster"
        ]
      }
    },
    "/{version}/service-records": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create service record",
        "tags": [
          "Service Records"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServiceRecordResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of service records",
        "tags": [
          "Service Records"
        ]
      }
    },
    "/{version}/service-records/{service_record}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "service_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get service record",
        "tags": [
          "Service Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "service_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update service record",
        "tags": [
          "Service Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "service_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete service record",
        "tags": [
          "Service Records"
        ]
      }
    },
    "/{version}/service-records/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ServiceRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServiceRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of service records",
        "tags": [
          "Service Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/ServiceRecord"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServiceRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of service records",
        "tags": [
          "Service Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "user",
                "user.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServiceRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of service records",
        "tags": [
          "Service Records"
        ]
      }
    },
    "/{version}/settings": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SettingsResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of settings",
        "tags": [
          "Settings"
        ]
      }
    },
    "/{version}/specialties": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Specialty"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SpecialtyResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create specialty",
        "tags": [
          "Specialties"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SpecialtyResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of specialties",
        "tags": [
          "Specialties"
        ]
      }
    },
    "/{version}/specialties/{specialty}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "specialty",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SpecialtyResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get specialty",
        "tags": [
          "Specialties"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "specialty",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Specialty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SpecialtyResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update specialty",
        "tags": [
          "Specialties"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "specialty",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SpecialtyResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete specialty",
        "tags": [
          "Specialties"
        ]
      }
    },
    "/{version}/specialties/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Specialty"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SpecialtyResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of specialties",
        "tags": [
          "Specialties"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Specialty"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SpecialtyResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of specialties",
        "tags": [
          "Specialties"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SpecialtyResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of specialties",
        "tags": [
          "Specialties"
        ]
      }
    },
    "/{version}/statuses": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Status"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create status",
        "tags": [
          "Statuses"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of statuses",
        "tags": [
          "Statuses"
        ]
      }
    },
    "/{version}/statuses/{status}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "status",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "submissions",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get status",
        "tags": [
          "Statuses"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "status",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "submissions",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update status",
        "tags": [
          "Statuses"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "status",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "submissions",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete status",
        "tags": [
          "Statuses"
        ]
      }
    },
    "/{version}/statuses/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "submissions",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of statuses",
        "tags": [
          "Statuses"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "submissions",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Status"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of statuses",
        "tags": [
          "Statuses"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "submissions",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of statuses",
        "tags": [
          "Statuses"
        ]
      }
    },
    "/{version}/submissions": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "comments",
                "comments.*",
                "form",
                "form.*",
                "user",
                "user.*",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubmissionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create submission",
        "tags": [
          "Submissions"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "comments",
                "comments.*",
                "form",
                "form.*",
                "user",
                "user.*",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubmissionResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of submissions",
        "tags": [
          "Submissions"
        ]
      }
    },
    "/{version}/submissions/{submission}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "comments",
                "comments.*",
                "form",
                "form.*",
                "user",
                "user.*",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubmissionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get submission",
        "tags": [
          "Submissions"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "comments",
                "comments.*",
                "form",
                "form.*",
                "user",
                "user.*",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubmissionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update submission",
        "tags": [
          "Submissions"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "comments",
                "comments.*",
                "form",
                "form.*",
                "user",
                "user.*",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubmissionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete submission",
        "tags": [
          "Submissions"
        ]
      }
    },
    "/{version}/submissions/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "comments",
                "comments.*",
                "form",
                "form.*",
                "user",
                "user.*",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Submission"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubmissionResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of submissions",
        "tags": [
          "Submissions"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "comments",
                "comments.*",
                "form",
                "form.*",
                "user",
                "user.*",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Submission"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubmissionResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of submissions",
        "tags": [
          "Submissions"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "comments",
                "comments.*",
                "form",
                "form.*",
                "user",
                "user.*",
                "statuses",
                "statuses.record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubmissionResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of submissions",
        "tags": [
          "Submissions"
        ]
      }
    },
    "/{version}/submissions/{submission}/statuses": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Status"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create status",
        "tags": [
          "Submissions Statuses"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of statuses",
        "tags": [
          "Submissions Statuses"
        ]
      }
    },
    "/{version}/submissions/{submission}/statuses/{status}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "status",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get status",
        "tags": [
          "Submissions Statuses"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "status",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update status",
        "tags": [
          "Submissions Statuses"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "status",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete status",
        "tags": [
          "Submissions Statuses"
        ]
      }
    },
    "/{version}/submissions/{submission}/statuses/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of statuses",
        "tags": [
          "Submissions Statuses"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Status"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of statuses",
        "tags": [
          "Submissions Statuses"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of statuses",
        "tags": [
          "Submissions Statuses"
        ]
      }
    },
    "/{version}/submissions/{submission}/statuses/attach": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Attach statuses",
        "tags": [
          "Submissions Statuses"
        ]
      }
    },
    "/{version}/submissions/{submission}/statuses/detach": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Detach statuses",
        "tags": [
          "Submissions Statuses"
        ]
      }
    },
    "/{version}/submissions/{submission}/statuses/sync": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Sync statuses",
        "tags": [
          "Submissions Statuses"
        ]
      }
    },
    "/{version}/submissions/{submission}/statuses/toggle": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Toggle statuses",
        "tags": [
          "Submissions Statuses"
        ]
      }
    },
    "/{version}/submissions/{submission}/statuses/{status}/pivot": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "submission",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "status",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pivot": {
                    "type": "object",
                    "description": "Pivot fields"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update pivot",
        "tags": [
          "Submissions Statuses"
        ]
      }
    },
    "/{version}/tasks": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "form",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TaskResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create task",
        "tags": [
          "Tasks"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "form",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaskResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of tasks",
        "tags": [
          "Tasks"
        ]
      }
    },
    "/{version}/tasks/{task}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "task",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "form",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TaskResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get task",
        "tags": [
          "Tasks"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "task",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "form",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TaskResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update task",
        "tags": [
          "Tasks"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "task",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "form",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TaskResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete task",
        "tags": [
          "Tasks"
        ]
      }
    },
    "/{version}/tasks/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "form",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Task"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaskResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of tasks",
        "tags": [
          "Tasks"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "form",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Task"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaskResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of tasks",
        "tags": [
          "Tasks"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "form",
                "users"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaskResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of tasks",
        "tags": [
          "Tasks"
        ]
      }
    },
    "/{version}/units": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "image",
                "groups",
                "groups.*",
                "users",
                "users.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Unit"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UnitResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create unit",
        "tags": [
          "Units"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "image",
                "groups",
                "groups.*",
                "users",
                "users.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnitResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of units",
        "tags": [
          "Units"
        ]
      }
    },
    "/{version}/units/{unit}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "unit",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "image",
                "groups",
                "groups.*",
                "users",
                "users.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UnitResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get unit",
        "tags": [
          "Units"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "unit",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "image",
                "groups",
                "groups.*",
                "users",
                "users.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Unit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UnitResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update unit",
        "tags": [
          "Units"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "unit",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "image",
                "groups",
                "groups.*",
                "users",
                "users.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UnitResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete unit",
        "tags": [
          "Units"
        ]
      }
    },
    "/{version}/units/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "image",
                "groups",
                "groups.*",
                "users",
                "users.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Unit"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnitResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of units",
        "tags": [
          "Units"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "image",
                "groups",
                "groups.*",
                "users",
                "users.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Unit"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnitResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of units",
        "tags": [
          "Units"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "image",
                "groups",
                "groups.*",
                "users",
                "users.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnitResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of units",
        "tags": [
          "Units"
        ]
      }
    },
    "/{version}/units/{unit}/image": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "unit",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create image",
        "tags": [
          "Units Image"
        ]
      }
    },
    "/{version}/units/{unit}/image/{image}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "unit",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get image",
        "tags": [
          "Units Image"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "unit",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update image",
        "tags": [
          "Units Image"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "unit",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "image",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete image",
        "tags": [
          "Units Image"
        ]
      }
    },
    "/{version}/users": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "attachments",
                "award_records",
                "award_records.*",
                "award_records.award.*",
                "combat_records",
                "combat_records.*",
                "fields",
                "position",
                "primary_assignment_records",
                "primary_assignment_records.*",
                "qualification_records",
                "qualification_records.*",
                "rank",
                "rank.*",
                "rank_records",
                "rank_records.*",
                "secondary_assignment_records",
                "secondary_assignment_records.*",
                "service_records",
                "service_records.*",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create user",
        "tags": [
          "Users"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "attachments",
                "award_records",
                "award_records.*",
                "award_records.award.*",
                "combat_records",
                "combat_records.*",
                "fields",
                "position",
                "primary_assignment_records",
                "primary_assignment_records.*",
                "qualification_records",
                "qualification_records.*",
                "rank",
                "rank.*",
                "rank_records",
                "rank_records.*",
                "secondary_assignment_records",
                "secondary_assignment_records.*",
                "service_records",
                "service_records.*",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of users",
        "tags": [
          "Users"
        ]
      }
    },
    "/{version}/users/{user}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "attachments",
                "award_records",
                "award_records.*",
                "award_records.award.*",
                "combat_records",
                "combat_records.*",
                "fields",
                "position",
                "primary_assignment_records",
                "primary_assignment_records.*",
                "qualification_records",
                "qualification_records.*",
                "rank",
                "rank.*",
                "rank_records",
                "rank_records.*",
                "secondary_assignment_records",
                "secondary_assignment_records.*",
                "service_records",
                "service_records.*",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get user",
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "attachments",
                "award_records",
                "award_records.*",
                "award_records.award.*",
                "combat_records",
                "combat_records.*",
                "fields",
                "position",
                "primary_assignment_records",
                "primary_assignment_records.*",
                "qualification_records",
                "qualification_records.*",
                "rank",
                "rank.*",
                "rank_records",
                "rank_records.*",
                "secondary_assignment_records",
                "secondary_assignment_records.*",
                "service_records",
                "service_records.*",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update user",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "attachments",
                "award_records",
                "award_records.*",
                "award_records.award.*",
                "combat_records",
                "combat_records.*",
                "fields",
                "position",
                "primary_assignment_records",
                "primary_assignment_records.*",
                "qualification_records",
                "qualification_records.*",
                "rank",
                "rank.*",
                "rank_records",
                "rank_records.*",
                "secondary_assignment_records",
                "secondary_assignment_records.*",
                "service_records",
                "service_records.*",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete user",
        "tags": [
          "Users"
        ]
      }
    },
    "/{version}/users/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "attachments",
                "award_records",
                "award_records.*",
                "award_records.award.*",
                "combat_records",
                "combat_records.*",
                "fields",
                "position",
                "primary_assignment_records",
                "primary_assignment_records.*",
                "qualification_records",
                "qualification_records.*",
                "rank",
                "rank.*",
                "rank_records",
                "rank_records.*",
                "secondary_assignment_records",
                "secondary_assignment_records.*",
                "service_records",
                "service_records.*",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of users",
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "attachments",
                "award_records",
                "award_records.*",
                "award_records.award.*",
                "combat_records",
                "combat_records.*",
                "fields",
                "position",
                "primary_assignment_records",
                "primary_assignment_records.*",
                "qualification_records",
                "qualification_records.*",
                "rank",
                "rank.*",
                "rank_records",
                "rank_records.*",
                "secondary_assignment_records",
                "secondary_assignment_records.*",
                "service_records",
                "service_records.*",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of users",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment_records",
                "assignment_records.*",
                "attachments",
                "award_records",
                "award_records.*",
                "award_records.award.*",
                "combat_records",
                "combat_records.*",
                "fields",
                "position",
                "primary_assignment_records",
                "primary_assignment_records.*",
                "qualification_records",
                "qualification_records.*",
                "rank",
                "rank.*",
                "rank_records",
                "rank_records.*",
                "secondary_assignment_records",
                "secondary_assignment_records.*",
                "service_records",
                "service_records.*",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of users",
        "tags": [
          "Users"
        ]
      }
    },
    "/{version}/users/{user}/assignment-records": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AssignmentRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create assignment record",
        "tags": [
          "Users Assignment Records"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssignmentRecordResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of assignment records",
        "tags": [
          "Users Assignment Records"
        ]
      }
    },
    "/{version}/users/{user}/assignment-records/{assignment_record}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "assignment_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AssignmentRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get assignment record",
        "tags": [
          "Users Assignment Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "assignment_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AssignmentRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update assignment record",
        "tags": [
          "Users Assignment Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "assignment_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AssignmentRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete assignment record",
        "tags": [
          "Users Assignment Records"
        ]
      }
    },
    "/{version}/users/{user}/assignment-records/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AssignmentRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssignmentRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of assignment records",
        "tags": [
          "Users Assignment Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/AssignmentRecord"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssignmentRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of assignment records",
        "tags": [
          "Users Assignment Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssignmentRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of assignment records",
        "tags": [
          "Users Assignment Records"
        ]
      }
    },
    "/{version}/users/{user}/assignment-records/associate": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AssignmentRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Associate assignment record with user",
        "tags": [
          "Users Assignment Records"
        ]
      }
    },
    "/{version}/users/{user}/assignment-records/{assignment_record}/dissociate": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "assignment_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "position",
                "specialty",
                "status",
                "unit",
                "unit.*"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AssignmentRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Dissociate assignment record from user",
        "tags": [
          "Users Assignment Records"
        ]
      }
    },
    "/{version}/users/{user}/award-records": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwardRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create award record",
        "tags": [
          "Users Award Records"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardRecordResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of award records",
        "tags": [
          "Users Award Records"
        ]
      }
    },
    "/{version}/users/{user}/award-records/{award_record}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get award record",
        "tags": [
          "Users Award Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwardRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update award record",
        "tags": [
          "Users Award Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete award record",
        "tags": [
          "Users Award Records"
        ]
      }
    },
    "/{version}/users/{user}/award-records/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AwardRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of award records",
        "tags": [
          "Users Award Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/AwardRecord"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of award records",
        "tags": [
          "Users Award Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AwardRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of award records",
        "tags": [
          "Users Award Records"
        ]
      }
    },
    "/{version}/users/{user}/award-records/associate": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Associate award record with user",
        "tags": [
          "Users Award Records"
        ]
      }
    },
    "/{version}/users/{user}/award-records/{award_record}/dissociate": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "award_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "award",
                "award.image",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AwardRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Dissociate award record from user",
        "tags": [
          "Users Award Records"
        ]
      }
    },
    "/{version}/users/{user}/combat-records": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CombatRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CombatRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create combat record",
        "tags": [
          "Users Combat Records"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CombatRecordResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of combat records",
        "tags": [
          "Users Combat Records"
        ]
      }
    },
    "/{version}/users/{user}/combat-records/{combat_record}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "combat_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CombatRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get combat record",
        "tags": [
          "Users Combat Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "combat_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CombatRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CombatRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update combat record",
        "tags": [
          "Users Combat Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "combat_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CombatRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete combat record",
        "tags": [
          "Users Combat Records"
        ]
      }
    },
    "/{version}/users/{user}/combat-records/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CombatRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CombatRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of combat records",
        "tags": [
          "Users Combat Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/CombatRecord"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CombatRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of combat records",
        "tags": [
          "Users Combat Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CombatRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of combat records",
        "tags": [
          "Users Combat Records"
        ]
      }
    },
    "/{version}/users/{user}/combat-records/associate": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CombatRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Associate combat record with user",
        "tags": [
          "Users Combat Records"
        ]
      }
    },
    "/{version}/users/{user}/combat-records/{combat_record}/dissociate": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "combat_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CombatRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Dissociate combat record from user",
        "tags": [
          "Users Combat Records"
        ]
      }
    },
    "/{version}/users/{user}/qualification-records": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "qualification",
                "qualification.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QualificationRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create qualification record",
        "tags": [
          "Users Qualification Records"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "qualification",
                "qualification.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationRecordResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of qualification records",
        "tags": [
          "Users Qualification Records"
        ]
      }
    },
    "/{version}/users/{user}/qualification-records/{qualification_record}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "qualification",
                "qualification.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get qualification record",
        "tags": [
          "Users Qualification Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "qualification",
                "qualification.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QualificationRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update qualification record",
        "tags": [
          "Users Qualification Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "qualification",
                "qualification.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete qualification record",
        "tags": [
          "Users Qualification Records"
        ]
      }
    },
    "/{version}/users/{user}/qualification-records/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "qualification",
                "qualification.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/QualificationRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of qualification records",
        "tags": [
          "Users Qualification Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "qualification",
                "qualification.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/QualificationRecord"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of qualification records",
        "tags": [
          "Users Qualification Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "qualification",
                "qualification.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualificationRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of qualification records",
        "tags": [
          "Users Qualification Records"
        ]
      }
    },
    "/{version}/users/{user}/qualification-records/associate": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "qualification",
                "qualification.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Associate qualification record with user",
        "tags": [
          "Users Qualification Records"
        ]
      }
    },
    "/{version}/users/{user}/qualification-records/{qualification_record}/dissociate": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "qualification_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "qualification",
                "qualification.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/QualificationRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Dissociate qualification record from user",
        "tags": [
          "Users Qualification Records"
        ]
      }
    },
    "/{version}/users/{user}/rank-records": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RankRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create rank record",
        "tags": [
          "Users Rank Records"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankRecordResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of rank records",
        "tags": [
          "Users Rank Records"
        ]
      }
    },
    "/{version}/users/{user}/rank-records/{rank_record}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get rank record",
        "tags": [
          "Users Rank Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RankRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update rank record",
        "tags": [
          "Users Rank Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete rank record",
        "tags": [
          "Users Rank Records"
        ]
      }
    },
    "/{version}/users/{user}/rank-records/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RankRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of rank records",
        "tags": [
          "Users Rank Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/RankRecord"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of rank records",
        "tags": [
          "Users Rank Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of rank records",
        "tags": [
          "Users Rank Records"
        ]
      }
    },
    "/{version}/users/{user}/rank-records/associate": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Associate rank record with user",
        "tags": [
          "Users Rank Records"
        ]
      }
    },
    "/{version}/users/{user}/rank-records/{rank_record}/dissociate": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document",
                "rank",
                "rank.image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Dissociate rank record from user",
        "tags": [
          "Users Rank Records"
        ]
      }
    },
    "/{version}/users/{user}/service-records": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create service record",
        "tags": [
          "Users Service Records"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServiceRecordResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of service records",
        "tags": [
          "Users Service Records"
        ]
      }
    },
    "/{version}/users/{user}/service-records/{service_record}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "service_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get service record",
        "tags": [
          "Users Service Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "service_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update service record",
        "tags": [
          "Users Service Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "service_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete service record",
        "tags": [
          "Users Service Records"
        ]
      }
    },
    "/{version}/users/{user}/service-records/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ServiceRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServiceRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of service records",
        "tags": [
          "Users Service Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/ServiceRecord"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServiceRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of service records",
        "tags": [
          "Users Service Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServiceRecordResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of service records",
        "tags": [
          "Users Service Records"
        ]
      }
    },
    "/{version}/users/{user}/service-records/associate": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Associate service record with user",
        "tags": [
          "Users Service Records"
        ]
      }
    },
    "/{version}/users/{user}/service-records/{service_record}/dissociate": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "service_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "author",
                "author.*",
                "comments",
                "comments.*",
                "document"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRecordResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Dissociate service record from user",
        "tags": [
          "Users Service Records"
        ]
      }
    },
    "/{version}/users/{user}/position/{position}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "position",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PositionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get position",
        "tags": [
          "Users Position"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "position",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PositionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update position",
        "tags": [
          "Users Position"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "position",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PositionResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete position",
        "tags": [
          "Users Position"
        ]
      }
    },
    "/{version}/users/{user}/position/batch": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Position"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PositionResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of positions",
        "tags": [
          "Users Position"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PositionResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of positions",
        "tags": [
          "Users Position"
        ]
      }
    },
    "/{version}/users/{user}/rank/{rank}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get rank",
        "tags": [
          "Users Rank"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rank"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update rank",
        "tags": [
          "Users Rank"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "rank",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RankResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete rank",
        "tags": [
          "Users Rank"
        ]
      }
    },
    "/{version}/users/{user}/rank/batch": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Rank"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of ranks",
        "tags": [
          "Users Rank"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of ranks",
        "tags": [
          "Users Rank"
        ]
      }
    },
    "/{version}/users/{user}/specialty/{specialty}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "specialty",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SpecialtyResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get specialty",
        "tags": [
          "Users Specialty"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "specialty",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Specialty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SpecialtyResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update specialty",
        "tags": [
          "Users Specialty"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "specialty",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SpecialtyResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete specialty",
        "tags": [
          "Users Specialty"
        ]
      }
    },
    "/{version}/users/{user}/specialty/batch": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Specialty"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SpecialtyResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of specialties",
        "tags": [
          "Users Specialty"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SpecialtyResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of specialties",
        "tags": [
          "Users Specialty"
        ]
      }
    },
    "/{version}/users/{user}/unit/{unit}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "unit",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UnitResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get unit",
        "tags": [
          "Users Unit"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "unit",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Unit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UnitResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update unit",
        "tags": [
          "Users Unit"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "unit",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UnitResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete unit",
        "tags": [
          "Users Unit"
        ]
      }
    },
    "/{version}/users/{user}/unit/batch": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Unit"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnitResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of units",
        "tags": [
          "Users Unit"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnitResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of units",
        "tags": [
          "Users Unit"
        ]
      }
    },
    "/{version}/users/{user}/status/{status}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "status",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get status",
        "tags": [
          "Users Status"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "status",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update status",
        "tags": [
          "Users Status"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "status",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete status",
        "tags": [
          "Users Status"
        ]
      }
    },
    "/{version}/users/{user}/status/batch": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Status"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of statuses",
        "tags": [
          "Users Status"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of statuses",
        "tags": [
          "Users Status"
        ]
      }
    },
    "/{version}/users/{user}/attachments": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AttachmentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create attachment",
        "tags": [
          "Users Attachments"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AttachmentResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of attachments",
        "tags": [
          "Users Attachments"
        ]
      }
    },
    "/{version}/users/{user}/attachments/{attachment}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "attachment",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AttachmentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get attachment",
        "tags": [
          "Users Attachments"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "attachment",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AttachmentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update attachment",
        "tags": [
          "Users Attachments"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "attachment",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AttachmentResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete attachment",
        "tags": [
          "Users Attachments"
        ]
      }
    },
    "/{version}/users/{user}/attachments/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Attachment"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AttachmentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of attachments",
        "tags": [
          "Users Attachments"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Attachment"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AttachmentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of attachments",
        "tags": [
          "Users Attachments"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AttachmentResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of attachments",
        "tags": [
          "Users Attachments"
        ]
      }
    },
    "/{version}/users/{user}/attachments/attach": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Attach attachments",
        "tags": [
          "Users Attachments"
        ]
      }
    },
    "/{version}/users/{user}/attachments/detach": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Detach attachments",
        "tags": [
          "Users Attachments"
        ]
      }
    },
    "/{version}/users/{user}/attachments/sync": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Sync attachments",
        "tags": [
          "Users Attachments"
        ]
      }
    },
    "/{version}/users/{user}/attachments/toggle": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Toggle attachments",
        "tags": [
          "Users Attachments"
        ]
      }
    },
    "/{version}/users/{user}/attachments/{attachment}/pivot": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "attachment",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pivot": {
                    "type": "object",
                    "description": "Pivot fields"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update pivot",
        "tags": [
          "Users Attachments"
        ]
      }
    },
    "/{version}/users/{user}/fields": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Field"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FieldResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create field",
        "tags": [
          "Users Fields"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FieldResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of fields",
        "tags": [
          "Users Fields"
        ]
      }
    },
    "/{version}/users/{user}/fields/{field}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "field",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FieldResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get field",
        "tags": [
          "Users Fields"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "field",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Field"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FieldResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update field",
        "tags": [
          "Users Fields"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "field",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FieldResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete field",
        "tags": [
          "Users Fields"
        ]
      }
    },
    "/{version}/users/{user}/fields/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Field"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FieldResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of fields",
        "tags": [
          "Users Fields"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Field"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FieldResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of fields",
        "tags": [
          "Users Fields"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FieldResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of fields",
        "tags": [
          "Users Fields"
        ]
      }
    },
    "/{version}/users/{user}/fields/attach": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Attach fields",
        "tags": [
          "Users Fields"
        ]
      }
    },
    "/{version}/users/{user}/fields/detach": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Detach fields",
        "tags": [
          "Users Fields"
        ]
      }
    },
    "/{version}/users/{user}/fields/sync": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Sync fields",
        "tags": [
          "Users Fields"
        ]
      }
    },
    "/{version}/users/{user}/fields/toggle": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Toggle fields",
        "tags": [
          "Users Fields"
        ]
      }
    },
    "/{version}/users/{user}/fields/{field}/pivot": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "field",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pivot": {
                    "type": "object",
                    "description": "Pivot fields"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update pivot",
        "tags": [
          "Users Fields"
        ]
      }
    },
    "/{version}/users/{user}/status-records": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Status"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create status",
        "tags": [
          "Users Status Records"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of statuses",
        "tags": [
          "Users Status Records"
        ]
      }
    },
    "/{version}/users/{user}/status-records/{status_record}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "status_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get status",
        "tags": [
          "Users Status Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "status_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update status",
        "tags": [
          "Users Status Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "status_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/StatusResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete status",
        "tags": [
          "Users Status Records"
        ]
      }
    },
    "/{version}/users/{user}/status-records/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of statuses",
        "tags": [
          "Users Status Records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Status"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of statuses",
        "tags": [
          "Users Status Records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of statuses",
        "tags": [
          "Users Status Records"
        ]
      }
    },
    "/{version}/users/{user}/status-records/attach": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Attach statuses",
        "tags": [
          "Users Status Records"
        ]
      }
    },
    "/{version}/users/{user}/status-records/detach": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Detach statuses",
        "tags": [
          "Users Status Records"
        ]
      }
    },
    "/{version}/users/{user}/status-records/sync": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Sync statuses",
        "tags": [
          "Users Status Records"
        ]
      }
    },
    "/{version}/users/{user}/status-records/toggle": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Toggle statuses",
        "tags": [
          "Users Status Records"
        ]
      }
    },
    "/{version}/users/{user}/status-records/{status_record}/pivot": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "status_record",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "record"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pivot": {
                    "type": "object",
                    "description": "Pivot fields"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update pivot",
        "tags": [
          "Users Status Records"
        ]
      }
    },
    "/{version}/users/{user}/tasks": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment",
                "attachments"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TaskResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create task",
        "tags": [
          "Users Tasks"
        ]
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment",
                "attachments"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaskResource"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/ResourceLinks"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResourceMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a list of tasks",
        "tags": [
          "Users Tasks"
        ]
      }
    },
    "/{version}/users/{user}/tasks/{task}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "task",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "with_trashed",
            "description": "Include deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "only_trashed",
            "description": "Only return deleted resources.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment",
                "attachments"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TaskResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get task",
        "tags": [
          "Users Tasks"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "task",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment",
                "attachments"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TaskResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update task",
        "tags": [
          "Users Tasks"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "task",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment",
                "attachments"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TaskResource"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete task",
        "tags": [
          "Users Tasks"
        ]
      }
    },
    "/{version}/users/{user}/tasks/batch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment",
                "attachments"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Task"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaskResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a batch of tasks",
        "tags": [
          "Users Tasks"
        ]
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment",
                "attachments"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "object",
                    "properties": {
                      "{key}": {
                        "$ref": "#/components/schemas/Task"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaskResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update a batch of tasks",
        "tags": [
          "Users Tasks"
        ]
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "force",
            "description": "Force delete the resource rather than just marking the resource deleted. This cannot be undone.",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment",
                "attachments"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "A list of resource IDs"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaskResource"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a batch of tasks",
        "tags": [
          "Users Tasks"
        ]
      }
    },
    "/{version}/users/{user}/tasks/attach": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment",
                "attachments"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Attach tasks",
        "tags": [
          "Users Tasks"
        ]
      }
    },
    "/{version}/users/{user}/tasks/detach": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment",
                "attachments"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Detach tasks",
        "tags": [
          "Users Tasks"
        ]
      }
    },
    "/{version}/users/{user}/tasks/sync": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment",
                "attachments"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Sync tasks",
        "tags": [
          "Users Tasks"
        ]
      }
    },
    "/{version}/users/{user}/tasks/toggle": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment",
                "attachments"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A key-value pairs, where keys are relation resource IDs and values are objects representing pivot fields"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "detached": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Toggle tasks",
        "tags": [
          "Users Tasks"
        ]
      }
    },
    "/{version}/users/{user}/tasks/{task}/pivot": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ],
              "default": "v2"
            },
            "name": "version",
            "in": "path",
            "required": true,
            "description": "The API version to use."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "task",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "assignment",
                "attachments"
              ]
            },
            "name": "include",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pivot": {
                    "type": "object",
                    "description": "Pivot fields"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/401Error"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/402Error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/403Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/404Error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/422Error"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/429Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/503Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update pivot",
        "tags": [
          "Users Tasks"
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKey": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "User": {
        "title": "User",
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "email_verified_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "nullable": true
          },
          "position_id": {
            "type": "integer",
            "nullable": true
          },
          "rank_id": {
            "type": "integer",
            "nullable": true
          },
          "specialty_id": {
            "type": "integer",
            "nullable": true
          },
          "status_id": {
            "type": "integer",
            "nullable": true
          },
          "unit_id": {
            "type": "integer",
            "nullable": true
          },
          "approved": {
            "type": "boolean",
            "default": true
          },
          "online": {
            "type": "boolean",
            "readOnly": true
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "notes_updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "profile_photo": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "profile_photo_url": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "cover_photo": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "cover_photo_url": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "discord_user_id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "timezone": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "last_seen_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "last_assignment_change_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "last_rank_change_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "UserResource": {
        "title": "UserResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Announcement": {
        "title": "Announcement",
        "type": "object",
        "required": ["title", "content", "color"],
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string",
            "description": "Supports HTML."
          },
          "color": {
            "type": "string",
            "description": "Provided as a 6 digit hex code."
          },
          "global": {
            "type": "boolean",
            "default": "false"
          },
          "enabled": {
            "type": "boolean",
            "default": "true"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "AnnouncementResource": {
        "title": "AnnouncementResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Announcement"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "AssignmentRecord": {
        "title": "AssignmentRecord",
        "type": "object",
        "required": ["user_id"],
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "status_id": {
            "type": "integer",
            "nullable": true
          },
          "unit_id": {
            "type": "integer",
            "nullable": true
          },
          "position_id": {
            "type": "integer",
            "nullable": true
          },
          "specialty_id": {
            "type": "integer",
            "nullable": true
          },
          "document_id": {
            "type": "integer",
            "nullable": true
          },
          "author_id": {
            "type": "integer",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": ["primary", "secondary"]
          },
          "text": {
            "type": "string",
            "description": "Supports HTML.",
            "nullable": true
          }
        }
      },
      "AssignmentRecordResource": {
        "title": "AssignmentRecordResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/AssignmentRecord"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Attachment": {
        "title": "Attachment",
        "type": "object",
        "required": ["name", "file"],
        "properties": {
          "name": {
            "type": "string"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "The file to be uploaded."
          },
          "filename": {
            "type": "string",
            "readOnly": true
          },
          "model_type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "model_id": {
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "path": {
            "type": "string",
            "readOnly": true
          },
          "attachment_url": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "AttachmentResource": {
        "title": "AttachmentResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Attachment"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Award": {
        "title": "Award",
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "order": {
            "type": "integer",
            "description": "Will be auto-calculated if nothing is provided."
          }
        }
      },
      "AwardResource": {
        "title": "AwardResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Award"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Image": {
        "title": "Image",
        "type": "object",
        "required": ["name", "image"],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "image": {
            "type": "string",
            "description": "The file to be uploaded.",
            "format": "binary",
            "writeOnly": true
          },
          "filename": {
            "type": "string",
            "readOnly": true
          },
          "path": {
            "type": "string",
            "readOnly": true
          },
          "image_url": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ImageResource": {
        "title": "ImageResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "model_type": {
                "type": "string",
                "nullable": true
              },
              "model_id": {
                "type": "integer",
                "nullable": true
              }
            }
          },
          {
            "$ref": "#/components/schemas/Image"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "AwardRecord": {
        "title": "AwardRecord",
        "type": "object",
        "required": ["user_id", "award_id"],
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "award_id": {
            "type": "integer"
          },
          "document_id": {
            "type": "integer",
            "nullable": true
          },
          "author_id": {
            "type": "integer",
            "nullable": true
          },
          "text": {
            "type": "string",
            "description": "Supports HTML.",
            "nullable": true
          }
        }
      },
      "AwardRecordResource": {
        "title": "AwardRecordResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/AwardRecord"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Calendar": {
        "title": "Calendar",
        "type": "object",
        "required": ["name", "color"],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "color": {
            "type": "string",
            "description": "Provided as a 6 digit hex code."
          }
        }
      },
      "CalendarResource": {
        "title": "CalendarResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Calendar"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Category": {
        "title": "Category",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "resource": {
            "type": "string"
          }
        }
      },
      "CategoryResource": {
        "title": "CategoryResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Category"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Document": {
        "title": "Document",
        "type": "object",
        "required": ["name", "author_id", "content"],
        "properties": {
          "author_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "content": {
            "type": "string",
            "description": "Supports HTML."
          }
        }
      },
      "DocumentResource": {
        "title": "DocumentResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Document"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Form": {
        "title": "Form",
        "type": "object",
        "required": ["name", "slug", "is_public"],
        "properties": {
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "success_message": {
            "type": "string",
            "description": "Supports HTML.",
            "nullable": true
          },
          "is_public": {
            "type": "boolean",
            "default": false
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "instructions": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          }
        }
      },
      "FormResource": {
        "title": "FormResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "submission_status_id": {
                "type": "integer",
                "nullable": true
              }
            }
          },
          {
            "$ref": "#/components/schemas/Form"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Qualification": {
        "title": "Qualification",
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "order": {
            "type": "integer",
            "description": "Will be auto-calculated if nothing is provided."
          }
        }
      },
      "QualificationResource": {
        "title": "QualificationResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Qualification"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Rank": {
        "title": "Rank",
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "abbreviation": {
            "type": "string",
            "nullable": true
          },
          "paygrade": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "description": "Will be auto-calculated if nothing is provided."
          }
        }
      },
      "RankResource": {
        "title": "RankResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Rank"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "CombatRecord": {
        "title": "CombatRecord",
        "type": "object",
        "required": ["user_id", "text"],
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "document_id": {
            "type": "integer",
            "nullable": true
          },
          "author_id": {
            "type": "integer",
            "nullable": true
          },
          "text": {
            "type": "string",
            "description": "Supports HTML."
          }
        }
      },
      "CombatRecordResource": {
        "title": "CombatRecordResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CombatRecord"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Comment": {
        "title": "Comment",
        "type": "object",
        "required": ["author_id", "comment"],
        "properties": {
          "author_id": {
            "type": "integer"
          },
          "model_type": {
            "type": "string",
            "nullable": true
          },
          "model_id": {
            "type": "integer",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Supports HTML."
          }
        }
      },
      "CommentResource": {
        "title": "CommentResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Comment"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Event": {
        "title": "Event",
        "type": "object",
        "required": ["name", "calendar_id", "author_id", "starts", "ends", "repeats", "all_day", "registration_enabled", "notifications_enabled"],
        "properties": {
          "name": {
            "type": "string"
          },
          "calendar_id": {
            "type": "integer"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "content": {
            "type": "string",
            "description": "Supports HTML.",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "author_id": {
            "type": "integer"
          },
          "all_day": {
            "type": "boolean",
            "default": false
          },
          "starts": {
            "type": "string",
            "format": "date-time"
          },
          "ends": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "repeats": {
            "type": "boolean",
            "default": false
          },
          "registration_enabled": {
            "type": "boolean",
            "default": true
          },
          "registration_deadline": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notifications_enabled": {
            "type": "boolean",
            "default": true
          },
          "notifications_interval": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["pt0m", "pt15m", "pt1h", "p1d", "p1w"]
            },
            "nullable": true
          },
          "notifications_channels": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["broadcast", "database", "discord_private", "discord_public", "mail", "sms"]
            },
            "nullable": true
          }
        }
      },
      "EventResource": {
        "title": "EventResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Submission": {
        "title": "Submission",
        "type": "object",
        "additionalProperties": true,
        "required": ["form_id", "user_id"],
        "properties": {
          "form_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          }
        }
      },
      "SubmissionResource": {
        "title": "SubmissionResource",
        "additionalProperties": true,
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Submission"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Group": {
        "title": "Group",
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "order": {
            "type": "integer",
            "description": "Will be auto-calculated if nothing is provided."
          },
          "hidden": {
            "type": "boolean",
            "default": false
          },
          "icon": {
            "type": "string",
            "nullable": true,
            "description": "A valid Heroicon."
          }
        }
      },
      "GroupResource": {
        "title": "GroupResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Group"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Message": {
        "title": "Message",
        "type": "object",
        "required": ["message", "channels"],
        "properties": {
          "message": {
            "type": "string",
            "description": "Supports HTML."
          },
          "channels": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["broadcast", "database", "discord_private", "discord_public", "mail", "sms"]
            }
          },
          "recipients": {
            "type": "array",
            "description": "An array of User IDs. Defaults to everyone if no recipients are provided.",
            "items": {
              "type": "integer"
            }
          },
          "repeats": {
            "type": "boolean",
            "default": false
          },
          "send_at": {
            "type": "string",
            "format": "date-time",
            "description": "Set a future date to send the msssage at.",
            "nullable": true
          },
          "sent_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "MessageResource": {
        "title": "MessageResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Newsfeed": {
        "title": "Newsfeed",
        "type": "object",
        "properties": {}
      },
      "NewsfeedResource": {
        "title": "NewsfeedResource",
        "allOf": [
          {
            "$ref": "#/components/schemas/Newsfeed"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "log_name": {
                "type": "string",
                "nullable": true
              },
              "description": {
                "type": "string"
              },
              "subject_type": {
                "type": "string",
                "nullable": true
              },
              "event": {
                "type": "string",
                "nullable": true
              },
              "subject_id": {
                "type": "integer",
                "nullable": true
              },
              "causer_type": {
                "type": "string",
                "nullable": true
              },
              "causer_id": {
                "type": "string",
                "nullable": true
              },
              "properties": {
                "type": "object",
                "additionalProperties": true
              },
              "batch_uuid": {
                "type": "string",
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "description": "The date the resource was created. Stored in UTC.",
                "nullable": true,
                "format": "date-time"
              },
              "updated_at": {
                "type": "string",
                "description": "The date the resource was updated. Stored in UTC.",
                "nullable": true,
                "format": "date-time"
              }
            }
          }
        ]
      },
      "Position": {
        "title": "Position",
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "order": {
            "type": "integer",
            "description": "Will be auto-calculated if nothing is provided."
          }
        }
      },
      "PositionResource": {
        "title": "PositionResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Position"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "QualificationRecord": {
        "title": "QualificationRecord",
        "type": "object",
        "required": ["user_id", "qualification_id"],
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "qualification_id": {
            "type": "integer"
          },
          "document_id": {
            "type": "integer",
            "nullable": true
          },
          "author_id": {
            "type": "integer",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          }
        }
      },
      "QualificationRecordResource": {
        "title": "QualificationRecordResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/QualificationRecord"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "RankRecord": {
        "title": "RankRecord",
        "type": "object",
        "required": ["user_id", "rank_id", "type"],
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "rank_id": {
            "type": "integer"
          },
          "document_id": {
            "type": "integer",
            "nullable": true
          },
          "author_id": {
            "type": "integer",
            "nullable": true
          },
          "text": {
            "type": "string",
            "description": "Supports HTML.",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "description": "0: Promotion, 1: Demotion, 2: Lateral, 3: Transfer",
            "enum": [0, 1, 2, 3]
          }
        }
      },
      "RankRecordResource": {
        "title": "RankRecordResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/RankRecord"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "ServiceRecord": {
        "title": "ServiceRecord",
        "type": "object",
        "required": ["user_id", "text"],
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "document_id": {
            "type": "integer",
            "nullable": true
          },
          "author_id": {
            "type": "integer",
            "nullable": true
          },
          "text": {
            "type": "string",
            "description": "Supports HTML."
          }
        }
      },
      "ServiceRecordResource": {
        "title": "ServiceRecordResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/ServiceRecord"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Settings": {
        "title": "Settings",
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "payload": {
            "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
          },
          "locked": {
            "type": "boolean"
          }
        }
      },
      "SettingsResource": {
        "title": "SettingsResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Settings"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Specialty": {
        "title": "Specialty",
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "order": {
            "type": "integer",
            "description": "Will be auto-calculated if nothing is provided."
          }
        }
      },
      "SpecialtyResource": {
        "title": "SpecialtyResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Specialty"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Status": {
        "title": "Status",
        "type": "object",
        "required": ["name", "color"],
        "properties": {
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string",
            "description": "Provided as a 6 digit hex code."
          },
          "order": {
            "type": "integer",
            "description": "Will be auto-calculated if nothing is provided."
          }
        }
      },
      "StatusResource": {
        "title": "StatusResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Status"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Task": {
        "title": "Task",
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "description": "Supports HTML."
          },
          "instructions": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "form_id": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "TaskResource": {
        "title": "TaskResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Task"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Unit": {
        "title": "Unit",
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "order": {
            "type": "integer",
            "description": "Will be auto-calculated if nothing is provided."
          },
          "hidden": {
            "type": "boolean",
            "default": false
          },
          "icon": {
            "type": "string",
            "nullable": true,
            "description": "A valid Heroicon."
          }
        }
      },
      "UnitResource": {
        "title": "UnitResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Unit"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "Field": {
        "title": "Field",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "cast": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Supports HTML."
          },
          "placeholder": {
            "type": "string",
            "nullable": true
          },
          "default": {
            "type": "string",
            "nullable": true
          },
          "help": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          },
          "rules": {
            "type": "string",
            "nullable": true
          },
          "readonly": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "FieldResource": {
        "title": "FieldResource",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Field"
          },
          {
            "$ref": "#/components/schemas/Label"
          },
          {
            "$ref": "#/components/schemas/Dates"
          }
        ]
      },
      "ResourceLinks": {
        "title": "ResourceLinks",
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "format": "uri"
          },
          "last": {
            "type": "string",
            "format": "uri"
          },
          "prev": {
            "type": "string",
            "format": "uri"
          },
          "next": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "ResourceMeta": {
        "title": "ResourceMeta",
        "type": "object",
        "properties": {
          "current_page": {
            "type": "integer"
          },
          "from": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "path": {
            "type": "string"
          },
          "per_page": {
            "type": "integer"
          },
          "to": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          }
        }
      },
      "RosterResource": {
        "title": "RosterResource",
        "allOf": [
          {
            "$ref": "#/components/schemas/RosterGroup"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          }
        ]
      },
      "RosterGroup": {
        "title": "RosterGroup",
        "allOf": [
          {
            "$ref": "#/components/schemas/Group"
          },
          {
            "type": "object",
            "properties": {
              "image": {
                "type": "object",
                "$ref": "#/components/schemas/Image"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "units": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RosterUnit"
                }
              }
            }
          }
        ]
      },
      "RosterUnit": {
        "title": "RosterUnit",
        "allOf": [
          {
            "$ref": "#/components/schemas/Unit"
          },
          {
            "type": "object",
            "properties": {
              "image": {
                "type": "object",
                "$ref": "#/components/schemas/Image"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        ]
      },
      "Dates": {
        "title": "Dates",
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "description": "The date the resource was created. Stored in UTC.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "The date the resource was updated. Stored in UTC.",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "description": "The date the resource was deleted. Stored in UTC.",
            "format":  "date-time",
            "nullable": true
          }
        }
      },
      "Label": {
        "title": "Label",
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          }
        }
      },
      "401Error": {
        "title": "401 Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "You are not authenticated. Please provide a valid API key that contains your PERSCOM ID to continue."
          },
          "type": {
            "type": "string",
            "example": "AuthenticationException"
          }
        }
      },
      "402Error": {
        "title": "402 Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "A valid subscription is required to complete this request."
          },
          "type": {
            "type": "string",
            "example": "HttpException"
          }
        }
      },
      "403Error": {
        "title": "403 Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "The API key provided does not have the correct permissions and/or scopes to perform the requested action."
          },
          "type": {
            "type": "string",
            "example": "HttpException"
          }
        }
      },
      "404Error": {
        "title": "404 Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "The requested resource could not be found."
          },
          "type": {
            "type": "string",
            "example": "NotFoundHttpException"
          }
        }
      },
      "422Error": {
        "title": "422 Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "The [field] is [required|invalid|etc]."
          },
          "type": {
            "type": "string",
            "example": "ValidationException"
          }
        }
      },
      "429Error": {
        "title": "429 Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "You have exceeded the API rate limit. Please wait a minute before trying again."
          },
          "type": {
            "type": "string",
            "example": "ThrottleRequestsException"
          }
        }
      },
      "503Error": {
        "title": "503 Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "The API is currently down for maintenance. Please check back later."
          },
          "type": {
            "type": "string",
            "example": "HttpException"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Me",
      "description": "API documentation for the Current User"
    },
    {
      "name": "Announcements",
      "description": "API documentation for Announcements"
    },
    {
      "name": "Assignment Records",
      "description": "API documentation for Assignment Records"
    },
    {
      "name": "Attachments",
      "description": "API documentation for Attachments"
    },
    {
      "name": "Awards",
      "description": "API documentation for Awards"
    },
    {
      "name": "Awards Image",
      "description": "API documentation for Awards Image"
    },
    {
      "name": "Award Records",
      "description": "API documentation for Award Records"
    },
    {
      "name": "Calendars",
      "description": "API documentation for Calendars"
    },
    {
      "name": "Categories",
      "description": "API documentation for Categories"
    },
    {
      "name": "Categories Awards",
      "description": "API documentation for Categories Awards"
    },
    {
      "name": "Categories Documents",
      "description": "API documentation for Categories Documents"
    },
    {
      "name": "Categories Forms",
      "description": "API documentation for Categories Forms"
    },
    {
      "name": "Categories Qualifications",
      "description": "API documentation for Categories Qualifications"
    },
    {
      "name": "Categories Ranks",
      "description": "API documentation for Categories Ranks"
    },
    {
      "name": "Combat Records",
      "description": "API documentation for Combat Records"
    },
    {
      "name": "Comments",
      "description": "API documentation for Comments"
    },
    {
      "name": "Documents",
      "description": "API documentation for Documents"
    },
    {
      "name": "Events",
      "description": "API documentation for Events"
    },
    {
      "name": "Events Image",
      "description": "API documentation for Events Image"
    },
    {
      "name": "Forms",
      "description": "API documentation for Forms"
    },
    {
      "name": "Forms Submissions",
      "description": "API documentation for Forms Submissions"
    },
    {
      "name": "Groups",
      "description": "API documentation for Groups"
    },
    {
      "name": "Groups Image",
      "description": "API documentation for Groups Image"
    },
    {
      "name": "Images",
      "description": "API documentation for Images"
    },
    {
      "name": "Messages",
      "description": "API documentation for Messages"
    },
    {
      "name": "Newsfeed",
      "description": "API documentation for Newsfeed"
    },
    {
      "name": "Newsfeed Likes",
      "description": "API documentation for Newsfeed Likes"
    },
    {
      "name": "Positions",
      "description": "API documentation for Positions"
    },
    {
      "name": "Qualifications",
      "description": "API documentation for Qualifications"
    },
    {
      "name": "Qualifications Image",
      "description": "API documentation for Qualifications Image"
    },
    {
      "name": "Qualification Records",
      "description": "API documentation for Qualification Records"
    },
    {
      "name": "Ranks",
      "description": "API documentation for Ranks"
    },
    {
      "name": "Ranks Image",
      "description": "API documentation for Ranks Image"
    },
    {
      "name": "Rank Records",
      "description": "API documentation for Rank Records"
    },
    {
      "name": "Roster",
      "description": "API documentation for Roster"
    },
    {
      "name": "Service Records",
      "description": "API documentation for Service Records"
    },
    {
      "name": "Settings",
      "description": "API documentation for Settings"
    },
    {
      "name": "Specialties",
      "description": "API documentation for Specialties"
    },
    {
      "name": "Statuses",
      "description": "API documentation for Statuses"
    },
    {
      "name": "Submissions",
      "description": "API documentation for Submissions"
    },
    {
      "name": "Submissions Statuses",
      "description": "API documentation for Submissions Statuses"
    },
    {
      "name": "Tasks",
      "description": "API documentation for Tasks"
    },
    {
      "name": "Units",
      "description": "API documentation for Units"
    },
    {
      "name": "Units Image",
      "description": "API documentation for Units Image"
    },
    {
      "name": "Users",
      "description": "API documentation for Users"
    },
    {
      "name": "Users Assignment Records",
      "description": "API documentation for Users Assignment Records"
    },
    {
      "name": "Users Award Records",
      "description": "API documentation for Users Award Records"
    },
    {
      "name": "Users Combat Records",
      "description": "API documentation for Users Combat Records"
    },
    {
      "name": "Users Qualification Records",
      "description": "API documentation for Users Qualification Records"
    },
    {
      "name": "Users Rank Records",
      "description": "API documentation for Users Rank Records"
    },
    {
      "name": "Users Service Records",
      "description": "API documentation for Users Service Records"
    },
    {
      "name": "Users Position",
      "description": "API documentation for Users Position"
    },
    {
      "name": "Users Rank",
      "description": "API documentation for Users Rank"
    },
    {
      "name": "Users Specialty",
      "description": "API documentation for Users Specialty"
    },
    {
      "name": "Users Unit",
      "description": "API documentation for Users Unit"
    },
    {
      "name": "Users Status",
      "description": "API documentation for Users Status"
    },
    {
      "name": "Users Attachments",
      "description": "API documentation for Users Attachments"
    },
    {
      "name": "Users Fields",
      "description": "API documentation for Users Fields"
    },
    {
      "name": "Users Status Records",
      "description": "API documentation for Users Status Records"
    },
    {
      "name": "Users Tasks",
      "description": "API documentation for Users Tasks"
    }
  ]
}